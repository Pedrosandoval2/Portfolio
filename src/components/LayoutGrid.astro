---
import { useTranslations } from "../i18n/ui";
import { languageList } from "../i18n/utils";
import LayoutGridCard from "./LayoutGridCard.astro";

export interface Card {
    id: number;
    content: string;
    title: string;
    description: string;
    className: string;
    tags: string[];
    href: string;
    thumbnail: string;
}

const currentLang = Astro.params.lang || "es";
const t = useTranslations(currentLang as keyof typeof languageList);

const createCards = (t: typeof useTranslations extends (lang: any) => infer R ? R : never): Card[] => [
    {
        id: 2,
        title: t("project-1-title"), // "High Rise Tech Labs"
        content: t("project-1-title"), // "High Rise Tech Labs"
        description: t("project-1-description"),
        className: "sm:col-span-1 col-span-2",
        tags: [
            "Nestjs",
            "Docker",
            "Mysql",
            "JWT",
            "TypeORM",
            "React",
            "Yup",
            "Zustand",
            "React Router",
            "Typescript",
            "Axios",
            "React Hook Form",
        ],
        thumbnail: "/assets/proyecto1.webp",
        href: "https://app.highrisetechlabs.com/auth/login",
    },
    {
        id: 1,
        title: t("project-2-title"), // "Event Creation System"
        content: t("project-2-title"), // "Event Creation System"
        description: t("project-2-description"),
        tags: [
            "Nestjs",
            "Docker",
            "Mysql",
            "JWT",
            "TypeORM",
            "React",
            "Yup",
            "Zustand",
            "React Router",
            "Typescript",
            "Axios",
            "React Hook Form",
        ],
        href: "https://github.com/Pedrosandoval2/Event-Creation-System",
        className: "col-span-2",
        thumbnail: "/assets/proyecto2.webp",
    },
    {
        id: 4,
        title: t("project-3-title"), // "Event Creation System"
        content: t("project-3-title"), // "Event Creation System"
        description: t("project-3-description"),
        tags: ["Astro", "TailwindCSS", "Netlify", "Bun"],
        href: "https://github.com/Pedrosandoval2/Event-Registration-System",
        className: "sm:col-span-3 col-span-2",
        thumbnail: "/assets/proyecto5.webp",
    },
    {
        id: 4,
        title: t("project-4-title"),
        content: t("project-4-title"),
        description: t("project-4-description"),
        tags: [
            "NestJS",
            "TypeScript",
            "TypeORM",
            "MySQL",
            "Docker Compose",
            "QR Code",
            "Class Validator",
            "Next.js",
            "TailwindCSS",
            "html5-qrcode",
            "Axios",
        ],
        href: "https://github.com/Pedrosandoval2/Event-Registration-System",
        className: "sm:col-span-2",
        thumbnail: "/assets/proyecto3.webp",
    },
    {
        id: 3,
        title: t("project-5-title"), // "Working...."
        content: t("project-5-title"), // "Working"
        description: t("project-5-description"),
        tags: [],
        href: "",
        className: "sm:col-span-1 col-span-2",
        thumbnail: "/assets/proyecto4.webp",
    },
];

const cards = createCards(t);
---

<div class="h-screen py-0 w-full">
    <LayoutGridCard cards={cards} />
</div>
